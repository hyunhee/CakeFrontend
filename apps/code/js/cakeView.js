// This file was automatically generated from template.soy.
// Please don't edit this file by hand.

if (typeof cakepage == 'undefined') { var cakepage = {}; }


cakepage.messages = function(opt_data, opt_ignored) {
  return apps.messages(null) + '<div style="display: none"><span id="Code_badXml">Error parsing XML:\\n%1\\n\\nSelect \'OK\' to abandon your changes or \'Cancel\' to further edit the XML.</span><span id="Code_badCode">Program error:\\n%1</span><span id="Code_timeout">Maximum execution iterations exceeded.</span><span id="Code_discard">Delete all %1 blocks?</span></div>';
};


cakepage.debug = function(opt_data, opt_ignored) {
  return '<!-- debug template --><script type="text/javascript" src="../../../generators/cake.js"><\/script><script type="text/javascript" src="../../../generators/cake/colour.js"><\/script><script type="text/javascript" src="../../../generators/cake/stdio.js"><\/script><script type="text/javascript" src="../../../generators/cake/stdlib.js"><\/script><script type="text/javascript" src="../../../generators/cake/math.js"><\/script><script type="text/javascript" src="../../../generators/cake/string.js"><\/script><script type="text/javascript" src="../../../generators/cake/lists.js"><\/script><script type="text/javascript" src="../../../generators/cake/logic.js"><\/script><script type="text/javascript" src="../../../generators/cake/loops.js"><\/script><script type="text/javascript" src="../../../generators/cake/procedures.js"><\/script><script type="text/javascript" src="../../../generators/cake/text.js"><\/script><script type="text/javascript" src="../../../generators/cake/variables.js"><\/script><script type="text/javascript" src="../../../blocks/colour.js"><\/script><script type="text/javascript" src="../../../blocks/stdio.js"><\/script><script type="text/javascript" src="../../../blocks/stdlib.js"><\/script><script type="text/javascript" src="../../../blocks/math.js"><\/script><script type="text/javascript" src="../../../blocks/string.js"><\/script><script type="text/javascript" src="../../../blocks/lists.js"><\/script><script type="text/javascript" src="../../../blocks/logic.js"><\/script><script type="text/javascript" src="../../../blocks/loops.js"><\/script><script type="text/javascript" src="../../../blocks/procedures.js"><\/script><script type="text/javascript" src="../../../blocks/text.js"><\/script><script type="text/javascript" src="../../../blocks/variables.js"><\/script><!-- Load the Google Drive SDK Realtime libraries. --><script type="text/javascript" src="https://apis.google.com/js/api.js"><\/script><!-- /debug template -->';
};


cakepage.header = function(opt_data, opt_ignored) {
  return '<nav class="navbar navbar-default" role="navigation"><!-- Brand and toggle get grouped for better mobile display --><div class="navbar-header"><button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-ex1-collapse"><span class="sr-only">Toggle navigation</span><span class="icon-bar"></span><span class="icon-bar"></span><span class="icon-bar"></span></button><a class="navbar-brand" href="#">Cake</a></div><!-- Collect the nav links, forms, and other content for toggling --><div class="collapse navbar-collapse navbar-ex1-collapse"><ul class="nav navbar-nav"><li class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown">About<b class="caret"></b></a><ul class="dropdown-menu"><li><a href="#">About Cake</a></li><li><a href="#">Developer</a></li><li><a href="#">add contents</a></li></ul></li><li class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown">Project<b class="caret"></b></a><ul class="dropdown-menu"><li><a href="prjIndex.html">New Project</a></li><li><a href="#">Open Project</a></li><li><a href="#">add contents</a></li></ul></li><li class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown">Etc<b class="caret"></b></a><ul class="dropdown-menu"><li><a href="#">Donation</a></li><li><a href="#">Help</a></li><li><a href="#">add contents</a></li></ul></li></ul><ul class="nav navbar-nav navbar-right"><button class="btn btn-primary btn-lg" data-toggle="modal" data-target="#loginModal">LogIn</button><!-- Modal --><div class="modal fade" id="loginModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true"><div class="modal-dialog"><div class="modal-content"><div class="modal-header"><button type="button" class="close" data-dismiss="modal" aria-hidden="true">x</button><h4 class="modal-title">LogIn</h4></div><div class="modal-body"><form role="form"><div class="form-group form-horizontal"><label for="md_lb_Email1" class="col-lg-2 control-label">Email</label><input type="email" class="form-control" id="inputEmail1" placeholder="Email"></div><div class="form-group form-horizontal"><label for="md_lb_Password1" class="col-lg-2 control-label">Password</label><input type="password" class="form-control" id="inputPassword1" placeholder="Password"></div><div class="form-group"><div class="checkbox"><label><input type="checkbox">Remember me</label></div></div><div class="form-group"><!--' + cakepage.signup(null) + ' Sign up--><a href="../signup.html">Sign up</a></div></form></div><div class="modal-footer"><button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button><button type="button" class="btn btn-primary">LogIn</button></div></div><!-- /.modal-content --></div><!-- /.modal-dialog --></div><!-- /.modal --></ul></div><!-- /.navbar-collapse --></nav>';
};


cakepage.signup = function(opt_data, opt_ignored) {
  return '<div class="container"><form class="form-signin" role="form"><h2 class="form-signin-heading">Please sign up :^)</h2><input type="email" class="form-control" placeholder="Email address" required="" autofocus=""><input type="text" class="form-control" placeholder="Name" required="" autofocus=""><input type="password" class="form-control" placeholder="Password" required=""><button class="btn btn-lg btn-primary btn-block" type="submit">Sign up</button></form></div>';
};


cakepage.secondHeader = function(opt_data, opt_ignored) {
  return '<nav class="navbar navbar-default" role="navigation"><!-- Brand and toggle get grouped for better mobile display --><div class="navbar-header"><button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-ex1-collapse"><span class="sr-only">Toggle navigation</span><span class="icon-bar"></span><span class="icon-bar"></span></button></div><!-- Collect the nav links, forms, and other content for toggling --><div class="collapse navbar-collapse navbar-ex1-collapse"><ul class="nav navbar-nav"><li class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown">File<b class="caret"></b></a><ul class="dropdown-menu"><li><a href="#">Save As</a></li><li><a href="#">Download</a></li><li><a href="#">Rename</a></li></ul></li><li class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown">Tool<b class="caret"></b></a><ul class="dropdown-menu"><li><a href="#">Tool1</a></li><li><a href="#">Tool2</a></li><li><a href="#">Tool3</a></li></ul></li></div><!-- /.navbar-collapse --></nav>';
};


cakepage.blockpageView = function(opt_data, opt_ignored) {
  return cakepage.messages(null) + '<script type="text/javascript" src="../../../blockly_uncompressed.js"><\/script><script type="text/javascript" src="../../../javascript_compressed.js"><\/script><script type="text/javascript" src="../../../python_compressed.js"><\/script><script type="text/javascript" src="../../../dart_compressed.js"><\/script><script type="text/javascript" src="../../../cake_compressed.js"><\/script>' + cakepage.debug(null) + '<div class="row"><nav class="navbar navbar-default col-xs-12 col-sm-6 col-md-2" role="navigation"><div><ul class="nav nav-pills nav-stacked"><li class="active"><a href="#">Pre</a></li><li><a href="#">Main</a></li><li><a href="#">sub</a></li></ul></div></nav><div class="col-xs-12 col-sm-6 col-md-10"><tr><td colspan=2><table width="100%"><tr id="tabRow" height="1em"><td id="tab_blocks" class="tabon">Blocks</td><td class="tabmin">&nbsp;</td><td id="tab_javascript" class="taboff">JavaScript</td><td class="tabmin">&nbsp;</td><td id="tab_python" class="taboff">Python</td><td class="tabmin">&nbsp;</td><td id="tab_dart" class="taboff">Dart</td><td class="tabmin">&nbsp;</td><td id="tab_xml" class="taboff">XML</td><td class="tabmin">&nbsp;</td><td id="tab_cake" class="taboff">C</td><td class="tabmax"><button id="trashButton" class="notext" title="Discard all blocks."><img src=\'../../../media/1x1.gif\' class="trash icon21"></button> <button id="linkButton" class="notext" title="Save and link to blocks."><img src=\'../../../media/1x1.gif\' class="link icon21"></button> <button id="runButton" class="notext primary" title="Run the program defined by the blocks in the workspace."><img src=\'../../../media/1x1.gif\' class="run icon21"></button></td></tr></table></td></tr><tr><td height="99%" colspan=2 id="content_area">' + cakepage.toolbox(null) + '</td></tr></table><div id="content_blocks" class="content"></div><pre id="content_javascript" class="content"></pre><pre id="content_python" class="content"></pre><pre id="content_dart" class="content"></pre><textarea id="content_xml" class="content" wrap="off"></textarea><pre id="content_cake" class="content"></pre><!--' + apps.dialog(null) + apps.storageDialog(null) + '--><label> blockkk</label></div></div>';
};


cakepage.toolbox = function(opt_data, opt_ignored) {
  return '<xml id="toolbox" style="display: none"><category name="Variables" custom="VARIABLE"></category><category name="Loops"><block type="loop_while"></block><block type="loop_dowhile"></block><block type="loop_for"></block></category><category name="Logic"><block type="logic_ifelse"></block><block type="logic_switch"></block></category><category name="Function"><block type="logic_ifelse"></block><block type="logic_switch"></block></category><category name="Library"><category name="Stdio"><category name="FILE I/O"><block type="library_stdio_fopen"><value name="TEXT"><block type="library_func_paren"></block></value></block><block type="library_stdio_fclose"><value name="TEXT"><block type="library_func_paren"></block></value></block><block type="library_stdio_fprintf"><value name="TEXT"><block type="library_func_paren"></block></value></block><block type="library_stdio_fscanf"><value name="TEXT"><block type="library_func_paren"></block></value></block><block type="library_stdio_fread"><value name="TEXT"><block type="library_func_paren"></block></value></block><block type="library_stdio_fwrite"><value name="TEXT"><block type="library_func_paren"></block></value></block><block type="library_stdio_fflush"><value name="TEXT"><block type="library_func_paren"></block></value></block></category><category name="I/O"><block type="library_stdio_printf"><value name="TEXT"><block type="library_func_paren"></block></value></block><block type="library_stdio_scanf"><value name="TEXT"><block type="library_func_paren"></block></value></block><block type="library_stdio_getchar"><value name="TEXT"><block type="library_func_paren"></block></value></block><block type="library_stdio_putchar"><value name="TEXT"><block type="library_func_paren"></block></value></block><block type="library_stdio_gets"><value name="TEXT"><block type="library_func_paren"></block></value></block><block type="library_stdio_puts"><value name="TEXT"><block type="library_func_paren"></block></value></block></category></category><category name="Stdlib"><block type="library_stdlib_rand"><value name="TEXT"><block type="library_func_paren"></block></value></block><block type="library_stdlib_srand"><value name="TEXT"><block type="library_func_paren"></block></value></block><block type="library_stdlib_malloc"><value name="TEXT"><block type="library_func_paren"></block></value></block><block type="library_stdlib_free"><value name="TEXT"><block type="library_func_paren"></block></value></block><block type="library_stdlib_exit"><value name="TEXT"><block type="library_func_paren"></block></value></block></category><category name="Math"><block type="library_func_paren"></block><block type="library_math_sin"></block><block type="library_math_cos"></block><block type="library_math_tan"></block></category></category></xml>';
};
